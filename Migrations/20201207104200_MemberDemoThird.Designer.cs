// <auto-generated />
using System;
using MemberDemo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MemberDemo.Migrations
{
    [DbContext(typeof(LogDemoDbContext))]
    [Migration("20201207104200_MemberDemoThird")]
    partial class MemberDemoThird
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MemberDemo.Models.Classes.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdminEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminID");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            AdminID = 1,
                            AdminEmail = "hamis@gmail.com",
                            FirstName = "Mohamed",
                            LastName = "Hamis",
                            Password = "M:a:2737417"
                        });
                });

            modelBuilder.Entity("MemberDemo.Models.Classes.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityName = "Makka",
                            CountryId = 4
                        },
                        new
                        {
                            Id = 2,
                            CityName = "Maddinh",
                            CountryId = 4
                        },
                        new
                        {
                            Id = 3,
                            CityName = "Riyadh",
                            CountryId = 4
                        },
                        new
                        {
                            Id = 4,
                            CityName = "Damam",
                            CountryId = 4
                        },
                        new
                        {
                            Id = 5,
                            CityName = "Mansoura",
                            CountryId = 3
                        },
                        new
                        {
                            Id = 6,
                            CityName = "Cairo",
                            CountryId = 3
                        },
                        new
                        {
                            Id = 7,
                            CityName = "Mahala",
                            CountryId = 3
                        },
                        new
                        {
                            Id = 8,
                            CityName = "Alex",
                            CountryId = 3
                        },
                        new
                        {
                            Id = 9,
                            CityName = "NewYourk",
                            CountryId = 1
                        },
                        new
                        {
                            Id = 10,
                            CityName = "LA",
                            CountryId = 1
                        },
                        new
                        {
                            Id = 11,
                            CityName = "Vigase",
                            CountryId = 1
                        },
                        new
                        {
                            Id = 12,
                            CityName = "Maiamy",
                            CountryId = 1
                        },
                        new
                        {
                            Id = 13,
                            CityName = "London",
                            CountryId = 2
                        },
                        new
                        {
                            Id = 14,
                            CityName = "Manchester",
                            CountryId = 2
                        },
                        new
                        {
                            Id = 15,
                            CityName = "Edinburgh",
                            CountryId = 2
                        },
                        new
                        {
                            Id = 16,
                            CityName = "Birmingham",
                            CountryId = 2
                        },
                        new
                        {
                            Id = 17,
                            CityName = "Glasgow",
                            CountryId = 2
                        },
                        new
                        {
                            Id = 18,
                            CityName = "Cardiff",
                            CountryId = 2
                        },
                        new
                        {
                            Id = 19,
                            CityName = "Belfast",
                            CountryId = 2
                        });
                });

            modelBuilder.Entity("MemberDemo.Models.Classes.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryName = "US"
                        },
                        new
                        {
                            Id = 2,
                            CountryName = "UK"
                        },
                        new
                        {
                            Id = 3,
                            CountryName = "Egypt"
                        },
                        new
                        {
                            Id = 4,
                            CountryName = "Saudi Arabia"
                        });
                });

            modelBuilder.Entity("MemberDemo.Models.Classes.Member", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOFBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("MemberStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("MemberDemo.Models.Classes.City", b =>
                {
                    b.HasOne("MemberDemo.Models.Classes.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("MemberDemo.Models.Classes.Member", b =>
                {
                    b.HasOne("MemberDemo.Models.Classes.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("MemberDemo.Models.Classes.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.Navigation("City");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("MemberDemo.Models.Classes.Country", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
